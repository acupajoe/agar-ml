{"version":3,"sources":["webpack:///webpack/bootstrap a395f3eb2ec3662dd9b3","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///external \"http\"","webpack:///external \"path\"","webpack:///./src/qlearning/server/game.js","webpack:///external \"lodash\"","webpack:///./src/qlearning/server/server.js","webpack:///./src/qlearning/server/food.js","webpack:///./src/qlearning/server/bot.js","webpack:///external \"qlearning\"","webpack:///./src/utils.js","webpack:///external \"socket.io\"","webpack:///external \"q-exp\"","webpack:///./src/qlearning/index.html"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,oC;;;;;;ACAA,wC;;;;;;ACAA,iC;;;;;;ACAA,iC;;;;;;;;;ACAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACnDA,mC;;;;;;;;;;;;;;;ACAA;AACkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,eAAe;AAC9C;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B,6BAA6B;;AAExD;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED,2DAA2D,KAAK;AAChE;;;;;;;;;ACpDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;AClBA;AACA;AACA;AACmB;;AAEnB;AACA,MAAM,uBAAuB,YAAY;AACzC,GAAG,0BAA0B,YAAY;AACzC,GAAG,0BAA0B,aAAa;AAC1C,GAAG,yBAAyB,YAAY;AACxC,GAAG,yBAAyB,aAAa;AACzC,GAAG,+BAA+B,YAAY;AAC9C,GAAG,+BAA+B,aAAa;AAC/C,GAAG,+BAA+B,aAAa;AAC/C,GAAG,+BAA+B;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uFAA+C,WAAW;AAC1D;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClJA,sC;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;ACtBA,sC;;;;;;ACAA,kC;;;;;;ACAA,mHAAmH,yBAAyB,wBAAwB,WAAW,qBAAqB,6CAA6C,4BAA4B,6BAA6B,4EAA4E,wCAAwC,WAAW,yBAAyB,oCAAoC,+BAA+B,WAAW,8BAA8B,iCAAiC,4BAA4B,gCAAgC,WAAW,oBAAoB,sCAAsC,WAAW,uBAAuB,iCAAiC,yBAAyB,0BAA0B,WAAW,sT","file":"qlearning-server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a395f3eb2ec3662dd9b3","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0 1","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 1\n// module chunks = 0 1","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 2\n// module chunks = 0 1","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 3\n// module chunks = 0 1","import Food from './food'\nimport Bot from './bot'\n\nlet settings = null\n\nclass Game {\n  init (clientSettings) {\n    settings = clientSettings\n    this.food = []\n    this.bots = []\n    this.iterations = 0\n    this.highestFitness = 0\n\n    for (let i = 0; i < settings.food.amount; i++) {\n      this.food.push(new Food(settings))\n    }\n\n    for (let j = 0; j < settings.bots; j++) {\n      let bot = new Bot(j, settings)\n      bot.init()\n      this.bots.push(bot)\n    }\n  }\n\n  get state () {\n    return {\n      food: this.food.map(f => {\n        return {x: f.x, y: f.y, area: f.area}\n      }),\n      bots: this.bots.map(b => {\n        return {index: b.index, x: b.x, y: b.y, area: b.area}\n      }),\n      me: null\n    }\n  }\n\n  update () {\n    for (let bot of this.bots) {\n      try {\n        let currentState = this.state\n        currentState.me = {index: bot.index, x: bot.x, y: bot.y, area: bot.area}\n        bot.update(currentState)\n      } catch (e) {\n        console.error(e)\n        process.exit(0)\n      }\n    }\n  }\n\n}\n\nexport default (new Game())\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/qlearning/server/game.js\n// module id = 4\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 5\n// module chunks = 0","import Game from './game'\nimport { isEqual } from 'lodash'\n\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst http = require('http')\nconst socketio = require('socket.io')\nconst path = require('path')\nconst ql = require('q-exp')\nconst port = process.env.PORT || 3000\n\nlet app = express()\nlet server = http.Server(app)\nlet io = socketio(server)\n\napp.use(bodyParser.urlencoded({extended: true}))\napp.use('/libs', express.static(path.join(__dirname, '../../../libs')))\napp.use('/dist', express.static(path.join(__dirname, '../../../dist')))\n\napp.get('/', (req, res, next) => {\n  res.send(require('../index.html'))\n})\n\nio.on('connection', (socket) => {\n  let settings\n  let isBlocked = false\n  let lastFood = null\n\n  socket.on('init', (clientSettings) => {\n    settings = clientSettings\n    Game.init(settings)\n  })\n\n  socket.on('tick', () => {\n    let state\n    let food\n    if (!isBlocked) {\n      isBlocked = true\n\n      Game.update()\n\n      state = Game.state\n      food = (lastFood && isEqual(state.food, lastFood)) ? false : state.food\n      socket.emit('tick', {bots: state.bots, food: food})\n\n      lastFood = state.food\n      isBlocked = false\n    }\n  })\n})\n\nserver.on('listening', () => console.log(`Listening on ::${port}`))\nserver.listen(port)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/qlearning/server/server.js\n// module id = 10\n// module chunks = 0","let settings = null\n\nclass Food {\n  constructor (clientSettings) {\n    settings = clientSettings\n    this.x = Math.floor(Math.random() * settings.width)\n    this.y = Math.floor(Math.random() * settings.height)\n    this.area = settings.food.area\n  }\n\n  reset () {\n    this.x = Math.floor(Math.random() * settings.width)\n    this.y = Math.floor(Math.random() * settings.height)\n  }\n\n  update () {}\n}\n\nexport default Food\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/qlearning/server/food.js\n// module id = 11\n// module chunks = 0","import _ from 'lodash'\nimport Game from './game'\nimport QLearning from 'qlearning'\nimport { distance } from '../../utils'\n\nconst actions = [\n  /* {key: 'nothing', move: {x: 0, y: 0}}, */\n  {key: 'move-north', move: {x: 0, y: 1}},\n  {key: 'move-south', move: {x: 0, y: -1}},\n  {key: 'move-east', move: {x: 1, y: 0}},\n  {key: 'move-west', move: {x: -1, y: 0}},\n  {key: 'move-north-east', move: {x: 1, y: 1}},\n  {key: 'move-north-west', move: {x: -1, y: 1}},\n  {key: 'move-south-east', move: {x: 1, y: -1}},\n  {key: 'move-south-west', move: {x: -1, y: -1}}\n]\nlet settings = null\n\nclass Bot {\n  constructor (index, clientSettings) {\n    settings = clientSettings\n    this.index = index\n    this.hasStarted = false\n    this.x = Math.floor(Math.random() * settings.width)\n    this.y = Math.floor(Math.random() * settings.height)\n    this.area = settings.area.min\n  }\n\n  init () {\n    this.agent = new QLearning(`player-agent-${this.index}`, actions, 0.35)\n      .setCost((state, action) => {\n        return Bot.calculateReward(state, action)\n      })\n      .setReward(state => {\n        return Bot.calculateReward(state)\n      })\n      .setStateGenerator((fromState, givenAction) => {\n        let state = Bot.generateState(fromState, givenAction)\n        this.x = state.me.x\n        this.y = state.me.y\n        this.area = state.me.area\n        return state\n      })\n      .load('./agents')\n      .bind(this)\n\n    this.agent.verbose = false\n  }\n\n  update (state) {\n    if (!this.hasStarted) {\n      this.agent.start(state)\n      this.hasStarted = true\n    }\n\n    this.agent\n      .perceiveState()\n      .step()\n      .perceiveState()\n      .learn()\n      .save('./agents')\n  }\n\n  static generateState (fromState, givenAction) {\n    // console.log(`Given ${givenAction.key}, what state is produced?`)\n    let toState = _.clone(fromState)\n    toState.me.x += givenAction.move.x\n    toState.me.y += givenAction.move.y\n\n    toState.me.x = toState.me.x > settings.width ? settings.width : toState.me.x < 0 ? toState.me.x = 0 : toState.me.x\n    toState.me.y = toState.me.y > settings.height ? settings.height : toState.me.y < 0 ? toState.me.y = 0 : toState.me.y\n\n    let nx = toState.me.x + givenAction.move.x\n    let ny = toState.me.y + givenAction.move.y\n\n    toState.me.area = toState.me.area * settings.size.decrease\n\n    if (toState.me.area > settings.area.max) {\n      toState.me.area = settings.area.max\n    }\n\n    if (toState.me.area < settings.area.min) {\n      toState.me.area = settings.area.min\n    }\n\n    for (let food of Game.food) {\n      let d = distance(nx, ny, food.x, food.y)\n      let r1 = Math.sqrt(toState.me.area / Math.PI)\n      let r2 = Math.sqrt(food.area / Math.PI)\n\n      if (d < (r1 + r2) / 2 && toState.me.area > food.area * settings.size.relative) {\n        toState.area += food.area\n        food.reset()\n      }\n    }\n\n    for (let bot of toState.bots) {\n      if (bot.index === toState.me.index) continue\n      let d = distance(nx, ny, bot.x, bot.y)\n      let r1 = Math.sqrt(toState.me.area / Math.PI)\n      let r2 = Math.sqrt(bot.area / Math.PI)\n\n      // We have consumed another bot\n      if (d < (r1 + r2) / 2 && toState.me.area > bot.area * settings.size.relative) {\n        toState.area += bot.area\n        toState.bots = toState.bots.filter(b => b.index !== bot.index)\n        Game.bots = Game.bots.filter(b => b.index !== bot.index)\n      }\n    }\n    return toState\n  }\n\n  static calculateReward (state, action = false) {\n    // console.log(`What's the reward of ${action.key}?`)\n    let x = action ? state.me.x + action.move.x : state.me.x\n    let y = action ? state.me.y + action.move.y : state.me.y\n    let reward = settings.reward.tick\n\n    for (let food of state.food) {\n      let d = distance(x, y, food.x, food.y)\n      let r1 = Math.sqrt(state.me.area / Math.PI)\n      let r2 = Math.sqrt(food.area / Math.PI)\n\n      if (d < ((r1 + r2) / 2) + settings.vision.food && state.me.area > food.area * settings.size.relative) {\n        reward += settings.reward.eatFood\n      }\n    }\n\n    for (let bot of state.bots) {\n      if (bot.index === this.index) continue\n      let d = distance(x, y, bot.x, bot.y)\n      let r1 = Math.sqrt(state.me.area / Math.PI)\n      let r2 = Math.sqrt(bot.area / Math.PI)\n\n      if (d < ((r1 + r2) / 2) + settings.vision.player) {\n        if (state.me.area > bot.area * settings.size.relative) {\n          reward += settings.reward.consumePlayer\n        } else {\n          reward += settings.reward.die\n        }\n      }\n    }\n    return reward\n  }\n}\n\nexport default Bot\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/qlearning/server/bot.js\n// module id = 12\n// module chunks = 0","module.exports = require(\"qlearning\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"qlearning\"\n// module id = 13\n// module chunks = 0","export const activationColor = (value, max) => {\n  let power = 1 - Math.min(value / max, 1)\n  let color = [255, 255, 0]\n\n  if (power < 0.5) {\n    color[0] = 2 * power * 255\n  } else {\n    color[1] = (1.0 - 2 * (power - 0.5)) * 255\n  }\n\n  return color\n}\n\nexport const angleToPoint = (x1, y1, x2, y2) => {\n  let d = distance(x1, y1, x2, y2)\n  let dx = (x2 - x1) / d\n  let dy = (y2 - y1) / d\n\n  let a = Math.acos(dx)\n  return dy < 0 ? 2 * Math.PI - a : a\n}\n\nexport const distance = (x1, y1, x2, y2) => Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils.js\n// module id = 14\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"q-exp\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"q-exp\"\n// module id = 16\n// module chunks = 0","module.exports = \"<html>\\n<head>\\n    <title>Q-Learning agar.io Learning</title>\\n    <style>\\n        html, body {\\n            padding: 0;\\n            margin: 0;\\n        }\\n\\n        #status {\\n            background: rgba(0, 0, 0, 0.6);\\n            padding: 15px;\\n            color: #fefefe;\\n            font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n            text-transform: uppercase;\\n        }\\n\\n        #status > p {\\n            display: inline-block;\\n            margin: 5px 15px;\\n        }\\n\\n        #chart-container {\\n            position: relative;\\n            height: 250px;\\n            padding-top: 10px;\\n        }\\n\\n        #chart {\\n            height: auto !important;\\n        }\\n\\n        #download {\\n            position: absolute;\\n            top: -100%;\\n            left: -100%;\\n        }\\n    </style>\\n    <script src=\\\"/libs/jquery-3.2.1.min.js\\\"></script>\\n    <script src=\\\"/libs/neataptic.js\\\"></script>\\n    <script src=\\\"/libs/p5.min.js\\\"></script>\\n    <script src=\\\"/libs/chart.min.js\\\"></script>\\n</head>\\n<body>\\n\\n<script src=\\\"/dist/qlearning.bundle.js\\\"></script>\\n</body>\\n</html>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/qlearning/index.html\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}